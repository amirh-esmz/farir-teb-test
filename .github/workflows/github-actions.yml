name: build and test

# Trigger this workflow on a push, or pull request to
# the main branch, when either C# or project files changed
on:
  push:
  pull_request:
    branches: [ master ]
    paths-ignore:
    - 'README.md'

# Create an environment variable named DOTNET_VERSION
# and set it as "6.0.x"
env:
  DOTNET_VERSION: '6.0.x' # The .NET SDK version to use

# Defines a single job named "build-and-test"
jobs:
  build-and-test:

    # When the workflow runs, this is the name that is logged
    # This job will run three times, once for each "os" defined
    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted]

    # Each job run contains these five steps
    steps:

    # 1) Check out the source code so that the workflow can access it.
    - uses: actions/checkout@v2
    
    # 2) Set up the .NET CLI environment for the workflow to use.
    #    The .NET version is specified by the environment variable.
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      working-directory: ./back-end
      run: dotnet restore farir-teb-test.sln

    - name: Test
      working-directory: ./back-end
      run: dotnet test farir-teb-test.sln --no-restore --verbosity normal

    - name: publish
      working-directory: ./back-end
      run: |
        dotnet publish farir-teb-test.sln -c Release -o C:/Servers/test

        if((Get-WebAppPoolState -Name freesens-dev-back).Value -ne 'Stopped'){
          Stop-WebAppPool -Name freesens-dev-back
          Start-Sleep -Seconds 5
        }
        
        Start-WebAppPool -Name freesens-dev-back
